<div id="chart">
</div>

<style>

    #chart svg {
        height: 400px;
    }

</style>

<script type="text/javascript">
  $(document).ready(function(){
    renderLineChart();
  });

  function renderLineChart() {
    $.ajax({
      type: "POST",
      url: "/topic_dates/get_daily_topics",
      success: function (data) {
          var margin = {top: 30, right: 30, bottom: 50, left: 60};
          var num = 1;
          var xformat = '%b %d';
          var tickMarks = [];
          for(var i=0; i<data[0].values.length; i++) {
              tickMarks.push(data[0].values[i].x);
          }
          var min = d3.min(data, function (d) {
                      return d3.min(d.values, function (v) {
                          return v.y;
                      });
                  }),
                  max = d3.max(data, function (d) {
                      return d3.max(d.values, function (v) {
                          return v.y;
                      });
                  });
          var chart = nv.models.lineChart().yDomain([min, max]).margin(margin);
//          var chart = nv.models.lineChart().yDomain([min, max])
          chart.lines.scatter.yDomain([min, max]);

          chart.xAxis.tickValues(tickMarks).tickFormat(function (d) {
                      return d3.time.format(xformat)(new Date(d));
                  });

          chart.yAxis.tickFormat(d3.format(',.2d'));
          chart.lines.forceY([0]);
          chart.lines.scatter.useVoronoi(false);

          d3.select('#chart').append("svg").datum(data).transition().duration(100).call(chart);

//          var chart = nv.models.lineChart().useInteractiveGuideline(true);

//          chart.xAxis.axisLabel('Time (ms)').tickFormat(d3.format(',r'));
//          chart.xAxis.tickValues('Date')
//                  .tickFormat(function (d) {
//                      return d3.time.format(xformat)(new Date(d));
//                  });
//
//          chart.yAxis.axisLabel('Voltage (v)').tickFormat(d3.format(',.2d'));
//
//          d3.select('#chart svg')
//                  .datum(data)
//                  .transition().duration(1000)
//                  .call(chart);

//          nv.utils.windowResize(chart.update);

          return chart;
      }
    });
  }
</script>